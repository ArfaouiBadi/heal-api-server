generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  phone    String?
  address  String?
  password String
  role     String  @default("USER")
  plan     Plan    @relation(fields: [planId], references: [id])

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  products       Product[]
  CommandProduct CommandProduct[]
  CommandPlan    CommandPlan[]
  planId         String           @default("65bec5bc1f60a483ad1f95e1") @db.ObjectId
}

model Category {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String        @unique
  subcategories Subcategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Product       Product[]
}

model Subcategory {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String    @unique
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String    @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Product    Product[]
}

model Product {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  productName       String
  price             Float
  image             String?
  reviews           Float?
  status            String?
  quantity          Int
  marque            String
  expirationDate    DateTime?
  prescription      Boolean?
  usageInstructions String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  userId            String           @db.ObjectId
  user              User             @relation(fields: [userId], references: [id])
  categoryId        String           @db.ObjectId
  subcategoryId     String           @db.ObjectId
  category          Category         @relation(fields: [categoryId], references: [id])
  subcategory       Subcategory      @relation(fields: [subcategoryId], references: [id])
  CommandProduct    CommandProduct[]
}

model CommandProduct {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int      @default(1)
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
}

model CommandPlan {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int      @default(1)
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  planId    String   @db.ObjectId
  plan      Plan     @relation(fields: [planId], references: [id])
}

model Plan {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  name                String   @unique
  price               Float
  autorizedProductNbr Int      @default(0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  CommandPlan CommandPlan[]
  User        User[]
}

model Brand {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
